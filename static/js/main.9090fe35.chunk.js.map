{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","covidData","fetch","then","Response","json","users","console","log","setState","data","className","this","rel","href","integrity","crossorigin","class","update_date_time","local_total_cases","local_deaths","local_new_cases","local_recovered","type","bg","g","color","cull","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mSAkJeA,E,kDA5IX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,UAAW,MAJL,E,qDAQd,WAAqB,IAAD,OAChBC,MAAM,yDACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVR,UAAWK,EAAMI,Y,oBAKjC,WACI,OACI,yBAAKC,UAAU,OACc,MAAxBC,KAAKZ,MAAMC,WACR,6BACI,0BACIY,IAAI,aACJC,KAAK,uFAET,0BACID,IAAI,aACJC,KAAK,2EACLC,UAAU,0EACVC,YAAY,cAEhB,0BACIF,KAAK,kEACLD,IAAI,eAER,yBAAKI,MAAM,gCACP,wBACIA,MAAM,gDACNH,KAAK,KAFT,6BAMA,0BAAMG,MAAM,4BACR,uBAAGH,KAAK,gCACJ,4BACI,0BAAMG,MAAM,qBAK5B,6BACA,6BACA,gLACA,wBAAIA,MAAM,cAAV,oBACA,2BACI,4BAAKL,KAAKZ,MAAMC,UAAUiB,mBAE9B,6BACA,6BACA,6BACA,yBAAKD,MAAM,mBACP,yBAAKA,MAAM,aACP,yBAAKA,MAAM,kCACP,yBAAKA,MAAM,aACP,4BACI,0BAAMA,MAAM,qBAEhB,wBAAIA,MAAM,cAAV,kHACA,wBAAIA,MAAM,cACN,wBAAIA,MAAM,qBACLL,KAAKZ,MAAMC,UAAUkB,sBAKtC,yBAAKF,MAAM,qCACP,yBAAKA,MAAM,aACP,4BACI,0BAAMA,MAAM,iBAEhB,wBAAIA,MAAM,cAAV,uEACA,wBAAIA,MAAM,aACN,wBAAIA,MAAM,qBACLL,KAAKZ,MAAMC,UAAUmB,iBAKtC,yBAAKH,MAAM,gCACP,yBAAKA,MAAM,aACP,4BACI,0BAAMA,MAAM,sBAEhB,wBAAIA,MAAM,cAAV,yFAEA,wBAAIA,MAAM,aACN,wBAAIA,MAAM,qBACLL,KAAKZ,MAAMC,UAAUoB,oBAKtC,yBAAKJ,MAAM,mCACP,yBAAKA,MAAM,aACP,4BACI,0BAAMA,MAAM,gBAEhB,wBAAIA,MAAM,cAAV,sGACA,wBAAIA,MAAM,aACN,wBAAIA,MAAM,qBACLL,KAAKZ,MAAMC,UAAUqB,qBAM1C,yJAIA,6BACA,6BACA,0GAMJ,kBAAC,IAAD,CAAaC,KAAK,SAASC,IAAI,IAC/B,kBAAC,IAAD,CAAgBC,EAAG,EAAGC,MAAM,SAASC,KAAK,4B,GArIhDC,IAAMC,WCOJC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCTRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0HzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBtC,MAAK,SAAAuC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.9090fe35.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport ParticlesBg from \"particles-bg\";\nimport MouseParticles from 'react-mouse-particles';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            covidData: null,\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://hpb.health.gov.lk/api/get-current-statistical\")\n            .then((Response) => Response.json())\n            .then((users) => {\n                console.log(users);\n                this.setState({\n                    covidData: users.data,\n                });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.covidData != null && (\n                    <div>\n                        <link\n                            rel=\"stylesheet\"\n                            href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n                        ></link>\n                        <link\n                            rel=\"stylesheet\"\n                            href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n                            integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n                            crossorigin=\"anonymous\"\n                        ></link>\n                        <link\n                            href=\"https://fonts.googleapis.com/css?family=Baloo+Da+2&display=swap\"\n                            rel=\"stylesheet\"\n                        ></link>\n                        <nav class=\"navbar navbar-light bg-light\">\n                            <h1\n                                class=\"navbar navbar-expand-lg navbar-light bg-light\"\n                                href=\"#\"\n                            >\n                                COVID-19 SriLanka Tracker\n                            </h1>\n                            <form class=\"form-inline my-2 my-lg-0\">\n                                <a href=\"https://github.com/BuddhikaD\">\n                                    <h1>\n                                        <span class=\"fa fa-github\"></span>\n                                    </h1>\n                                </a>\n                            </form>\n                        </nav>\n                        <br/>\n                        <br/>\n                        <h1>COVID-19 ශ්‍රී ලංකා තත්ත්ව වාර්තාව</h1>\n                        <h5 class=\"text-muted\">Last Update Time</h5>\n                        <b>\n                            <h4>{this.state.covidData.update_date_time}</h4>\n                        </b>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <div class=\"container pt-3 \">\n                            <div class=\"card-deck\">\n                                <div class=\"card text-white bg-danger mb-3\">\n                                    <div class=\"card-body\">\n                                        <h1>\n                                            <span class=\"fa fa-ambulance\"></span>\n                                        </h1>\n                                        <h1 class=\"card-title\">මුළු රෝගීන් සංඛ්‍යාව</h1>\n                                        <h1 class=\"card-text \">\n                                            <h1 class=\"badge badge-light\">\n                                                {this.state.covidData.local_total_cases}\n                                            </h1>\n                                        </h1>\n                                    </div>\n                                </div>\n                                <div class=\"card text-white bg-secondary mb-3\">\n                                    <div class=\"card-body\">\n                                        <h1>\n                                            <span class=\"fa fa-hotel\"></span>\n                                        </h1>\n                                        <h1 class=\"card-title\">මරණ සංඛ්‍යාව</h1>\n                                        <h1 class=\"card-text\">\n                                            <h1 class=\"badge badge-light\">\n                                                {this.state.covidData.local_deaths}\n                                            </h1>\n                                        </h1>\n                                    </div>\n                                </div>\n                                <div class=\"card text-white bg-dark mb-3\">\n                                    <div class=\"card-body\">\n                                        <h1>\n                                            <span class=\"fa fa-wheelchair\"></span>\n                                        </h1>\n                                        <h2 class=\"card-title\">නවතම වාර්තාවීම්</h2>\n\n                                        <h1 class=\"card-text\">\n                                            <h1 class=\"badge badge-light\">\n                                                {this.state.covidData.local_new_cases}\n                                            </h1>\n                                        </h1>\n                                    </div>\n                                </div>\n                                <div class=\"card text-white bg-success mb-3\">\n                                    <div class=\"card-body\">\n                                        <h1>\n                                            <span class=\"fa fa-male\"></span>\n                                        </h1>\n                                        <h1 class=\"card-title\">සුවය ලැබූ සංඛ්‍යාව</h1>\n                                        <h1 class=\"card-text\">\n                                            <h1 class=\"badge badge-light\">\n                                                {this.state.covidData.local_recovered}\n                                            </h1>\n                                        </h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <p>\n                                This might take several minutes to be updated,since Health\n                                Promotion Bureau is issuing verified data from reliable sources\n                            </p>\n                            <br/>\n                            <br/>\n                            <footer>\n                                Made with ❤ by Buddhika Dananjaya | Powered by hpb.health.gov.lk\n                            </footer>\n                        </div>\n\n                        {}\n                        <ParticlesBg type=\"cobweb\" bg={true}/>\n                        <MouseParticles g={1} color=\"random\" cull=\"col,image-wrapper\"/>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}